############## SHELL ####################################################################################################################################################################################
#																									#
#																									#
#	vi 파일이름.sh								// 쉘스크립트 작성(적당한 경로에서)											#
#																									#
#																									#
#																									#
#																									#
#	find 파일이름 -type f -mtime +(일) -exec rm -f {} \;			// -exec (명령어) {} \;     :      -exec뒤의 명령어 실행 	| {} : 앞의 find경로에서 찾은 파일			#
#										// rm	: 삭제명령어		-f : 삭제할파일 없을경우 그냥 넘어감							#
#										// -mtime + : 수정된 날짜 시간기록을 찾음(날짜가 아니라 타임스탬프-24시간)						#
#										// type -f : 파일만 찾음	(-d : 디렉토리를 찾음)									#
#																									#
#																									#
#																									#
#	// 기간들은 define 해놓고 변수로 써도 됨 -> 가독성, 수정쉬움 **********  ex) 삭제기간 : DEL_DAY=7		로그위치 : LOG_PATH=(로그경로-파일이름빼고)					#
#																									#
#																									#
#	EX) 																								#
#																									#
#		#!/bin/sh									// Shell 스크립트 정의											#
#		PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:		// sbin : root계정일 때 사용가능, 일반계정은 bin		PATH는 명령어 경로			#
#		DEL_DAY=7									// 삭제할 기간 수정시 여기만 수정		--> 7*24시간 전보다 오래된 파일				#
#		LOG_PATH=(로그경로-파일이름빼고)						// 로그경로 바뀔시 여기만 수정										#
#																									#
#																									#
#																									#
#		############# DEL LOG #############						// 주석													#
#	 																								#
#		find $LOG_PATH -type f -name "*.log" -mtime +$DEL_DAY -exec rm -f {} \;		// 실행코드												#
#																									#
#																									#
#		############# NEW LOG #############						// 하나의 파일에 로그 쌓을 때										#
#		echo_timestamp() {																					#
#			echo "["`date "+%m-%d-%Y %H:%M:%S %z %Z"`"]" $*																	#
#		}																							#
#																									#
#		echo_timestamp `실제로 수행되는 코드(ex| 매일 1씩 더한다)` >> 로그경로 2>&1														#
#																									#
#																									#
#																									#
#	ESC 누르고 :wq!										// 저장하고 나가기											#
#																									#
#																									#
#########################################################################################################################################################################################################







############## CRONTAB ##################################################################################################################################################################################
#																									#
#																									#
#	crontab -e								// 크론탭 에디터 실행													#
#										// -l 예약작업리스트													#
#										// -r 크론탭 삭제													#
#																									#
#																									#
#																									#
#	(시간) (사용자 if)root) (명령)						// 문법															#
#																									#
#																									#
#	(분-조건가능) 9 * * 1-5 (파일이름.sh)  			 		// 매주 월~금요일 9시 (분)에 실행파일 실행		| 	분 시 일 월 요일(0-일요일, 6-토요일)			#
#										// 조건은 */10 - 매 10분마다												#
#										// 5,6 - 5분,6분에													#
#										// 5-7 - 5분부터 7분까지 매분												#
#																									#
#																									#
#																									#
#																									#
#																									#
#																									#
#	##########로깅-crontab에 대한 로깅																				#
#																									#
#	* * * * * (경로) > 경로_'date + \%Y\%m\%d\%H\%M\%S'.log 2>&1	// > : 파일을 새로 작성(new)   |   >> : 파일을 덧붙여 작성(append)								#
#										// & : 명령을 백그라운드에서 실행											#
#										// 2 : 실행하면서 나온 표준에러를 log파일에 덧붙여 씀									#
#										// 1 : 표준출력														#
#										// 로그 필요없을 때 : * * * * * (경로) >> /dev/null 2>&1								#
#										// 파일명을 경로_날짜로 지정												#
#																									#
#																									#
#																									#
#	* * * * * crontab -l > 경로.txt						// 원하는시간대(* * * * *) 에 크론탭 txt파일로 백업									#
#																									#
#																									#
#	ESC 누르고 :wq!																							#
#																									#
#																									#
#########################################################################################################################################################################################################





@@@@@@@@@@@@@@@코드@@@@@@@@@@@@@@@@@



## test.sh ##

#!/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:
DEL_DAY=7
LOG_PATH=/home/script/test

############# DEL LOG ##############

find $LOG_PATH -type f -name "*.log" -mtime +$DEL_DAY -exec rm -f {} \;






## crontab ##


0 0 * * 1 test.sh
* * * * * /home/script/test > /home/script/test_'date + \%Y\%m\%d\%H\%M\%S'.log 2>&1


